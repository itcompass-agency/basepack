version: '3.8'

networks:
  network:
    driver: bridge

services:
  laravel:
    container_name: {{PROJECT_NAME}}-laravel
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
      args:
        BUILD_ARGUMENT_ENV: prod
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
    volumes:
      - ./:/var/www/html:cached
    networks:
      - network
    depends_on:
      - mysql
      - redis
    environment:
      INSIDE_DOCKER_CONTAINER: 1

  supervisord:
    container_name: {{PROJECT_NAME}}-supervisord
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
      args:
        BUILD_ARGUMENT_ENV: prod
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
    volumes:
      - ./:/var/www/html:cached
    networks:
      - network
    depends_on:
      - laravel
    command: ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

  nginx:
    container_name: {{PROJECT_NAME}}-nginx
    build:
      context: ./.docker/nginx
      dockerfile: Dockerfile
      args:
        BUILD_ARGUMENT_ENV: prod
    ports:
      - "${WEB_PORT_HTTP}:80"
      - "${WEB_PORT_SSL}:443"
    volumes:
      - ./:/var/www/html:cached
    depends_on:
      - laravel
    networks:
      - {{PROJECT_NAME}}

  mysql:
    container_name: {{PROJECT_NAME}}-mysql
    image: mysql:8.0
    ports:
      - "${DB_OUTER_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_INNODB_USE_NATIVE_AIO: ${INNODB_USE_NATIVE_AIO}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - network
    command: --default-authentication-plugin=mysql_native_password

  redis:
    container_name: {{PROJECT_NAME}}-redis
    image: redis:alpine
    ports:
      - "${REDIS_OUTER_PORT}:6379"
    networks:
      - network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local